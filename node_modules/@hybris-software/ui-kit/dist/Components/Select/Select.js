"use strict";

require("core-js/modules/es.symbol.description.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("core-js/modules/web.dom-collections.iterator.js");
require("core-js/modules/es.parse-float.js");
require("core-js/modules/es.regexp.exec.js");
require("core-js/modules/es.string.match.js");
var _react = _interopRequireWildcard(require("react"));
var _io = require("react-icons/io");
var _classNames = _interopRequireDefault(require("../../Utils/classNames"));
var _SelectModule = _interopRequireDefault(require("./Select.module.css"));
var _ThemeContext = _interopRequireDefault(require("../../Contexts/ThemeContext"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
/**
 * @param {Object} props - props
 * @param {Object} props.style - Style for the select
 * @param {string} props.className - Class name for the select
 * @param {string} props.classNameOpened - Class name for the select when opened
 * @param {string} props.classNameOption - Class name for the option
 * @param {string} props.classNamePlaceholder - Class name for the placeholder
 * @param {string} props.placeholder - Placeholder
 * @param {string} props.value - Value
 * @param {function} props.setValue - Set value
 * @param {Array} props.items - Items
 * @param {string} props.labelKey - Label key
 * @param {JSX.Element} props.icon - Icon
 * @param {number} props.iconTransitionSpeed - Icon transition speed
 * @param {boolean} props.scrollToTopOnClose - Scroll to top on close
 * @param {number} props.maxHeightOpened - Max height opened
 * @param {Object} props.styleOpened - Style opened
 * @param {Object} props.styleClosed - Style closed
 * @param {function} props.onSelectOpen - On select open
 * @param {function} props.onSelectClose - On select close
 * @param {function} props.onSelectChange - On select change
 * @param {function} props.renderOption - Render option
 * @param {function} props.renderPlaceholder - Render placeholder
 */

const SelectComponent = (_ref, ref) => {
  var _themeContext$theme, _themeContext$theme2, _themeContext$theme3, _themeContext$theme4, _themeContext$theme5, _themeContext$theme6, _themeContext$theme7, _themeContext$theme8;
  let {
    style,
    className,
    classNameOpened,
    classNameOption,
    classNamePlaceholder,
    placeholder,
    value,
    setValue,
    items,
    labelKey = "label",
    icon = /*#__PURE__*/_react.default.createElement(_io.IoIosArrowDown, null),
    iconTransitionSpeed,
    scrollToTopOnClose = true,
    maxHeightOpened = 150,
    styleOpened = {
      overflow: "auto",
      position: "absolute",
      opacity: 1,
      zIndex: 5,
      transition: "all 0.3s",
      visibility: "visible"
    },
    styleClosed = {
      overflow: "hidden",
      position: "absolute",
      visibility: "hidden",
      transition: "all 0.2s",
      zIndex: 3,
      opacity: 0
    },
    onSelectOpen = () => {},
    onSelectClose = () => {},
    onSelectChange = () => {},
    renderOption = (item, fullItem) => item,
    renderPlaceholder = item => item
  } = _ref;
  // Contexts
  const themeContext = (0, _react.useContext)(_ThemeContext.default);

  // States
  const [_open, setOpen] = (0, _react.useState)(false);
  const [position, setPosition] = (0, _react.useState)("");

  // Const
  const computedItems = items || [];
  const isObject = computedItems.some(el => typeof el === "object");
  const seconds = parseFloat(styleClosed.transition.match(/(\d+(?:\.\d+)?)s/)[1]);

  // Refs
  const defaultRef = (0, _react.useRef)(null);
  const selectRef = ref || defaultRef;
  const childRef = (0, _react.useRef)(null);
  const selectOpenedRef = (0, _react.useRef)(null);

  // Functions
  const checkPosition = (refOpened, state) => {
    const selectOpened = refOpened === null || refOpened === void 0 ? void 0 : refOpened.current;
    const selectTop = selectOpened.getBoundingClientRect().top;
    const windowHeight = window.innerHeight;
    if (!state) {
      if (windowHeight - selectTop < maxHeightOpened) {
        setPosition("top");
        selectOpened.style.bottom = "".concat(childRef === null || childRef === void 0 ? void 0 : childRef.current.clientHeight, "px");
        selectOpened.style.top = "auto";
      }
      if (windowHeight - selectTop >= maxHeightOpened) {
        setPosition("bottom");
        selectOpened.style.top = "".concat(childRef === null || childRef === void 0 ? void 0 : childRef.current.clientHeight, "px");
        selectOpened.style.bottom = "auto";
      }
    }
  };

  // Methods
  (0, _react.useImperativeHandle)(selectRef, () => ({
    open: () => {
      checkPosition(selectOpenedRef, _open);
      setOpen(true);
      onSelectOpen();
    },
    close: () => {
      position === "top" ? selectOpenedRef.current.style.bottom = "0" : selectOpenedRef.current.style.top = "0";
      checkPosition(selectOpenedRef, _open);
      setOpen(false);
      onSelectClose();
    },
    toggle: () => {
      checkPosition(selectOpenedRef, _open);
      setOpen(OldState => {
        if (OldState) {
          onSelectClose();
        } else {
          onSelectOpen();
        }
        return !OldState;
      });
    },
    getValue: () => value,
    updateValue: value => {
      setValue(value);
      onSelectChange(value);
    }
  }));

  // Theme Classes
  const computedClassName = className || (themeContext === null || themeContext === void 0 ? void 0 : themeContext.theme) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme = themeContext.theme) === null || _themeContext$theme === void 0 ? void 0 : _themeContext$theme.select) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme2 = themeContext.theme) === null || _themeContext$theme2 === void 0 ? void 0 : _themeContext$theme2.select.selectClassName) || _SelectModule.default.selectClass;
  const computedClassNameOpened = classNameOpened || (themeContext === null || themeContext === void 0 ? void 0 : themeContext.theme) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme3 = themeContext.theme) === null || _themeContext$theme3 === void 0 ? void 0 : _themeContext$theme3.select) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme4 = themeContext.theme) === null || _themeContext$theme4 === void 0 ? void 0 : _themeContext$theme4.select.selectOpenedClassName) || _SelectModule.default.selectClassOpened;
  const computedClassNameOption = classNameOption || (themeContext === null || themeContext === void 0 ? void 0 : themeContext.theme) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme5 = themeContext.theme) === null || _themeContext$theme5 === void 0 ? void 0 : _themeContext$theme5.select) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme6 = themeContext.theme) === null || _themeContext$theme6 === void 0 ? void 0 : _themeContext$theme6.select.selectOptionClassName) || _SelectModule.default.selectClassOption;
  const computedClassNamePlaceholder = classNamePlaceholder || (themeContext === null || themeContext === void 0 ? void 0 : themeContext.theme) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme7 = themeContext.theme) === null || _themeContext$theme7 === void 0 ? void 0 : _themeContext$theme7.select) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme8 = themeContext.theme) === null || _themeContext$theme8 === void 0 ? void 0 : _themeContext$theme8.select.selectPlaceholderClassName) || _SelectModule.default.selectClassPlaceholder;
  return /*#__PURE__*/_react.default.createElement("div", {
    ref: selectRef,
    style: style
  }, /*#__PURE__*/_react.default.createElement("div", {
    ref: childRef,
    style: !_open ? {
      position: "relative"
    } : position === "top" ? {
      position: "relative",
      borderTopLeftRadius: 0,
      borderTopRightRadius: 0
    } : {
      position: "relative",
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0
    },
    className: (0, _classNames.default)(_SelectModule.default.select, computedClassName),
    onClick: () => {
      selectRef === null || selectRef === void 0 ? void 0 : selectRef.current.toggle();
    },
    onMouseLeave: () => {
      selectRef === null || selectRef === void 0 ? void 0 : selectRef.current.close();
      if (scrollToTopOnClose) {
        setTimeout(() => {
          if (selectOpenedRef !== null && selectOpenedRef !== void 0 && selectOpenedRef.current) {
            selectOpenedRef.current.scrollTop = 0;
          }
        }, seconds * 1000);
      }
    }
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _SelectModule.default.selected
  }, /*#__PURE__*/_react.default.createElement("span", null, value ? isObject ? renderOption(value[labelKey], value) : renderOption(value) : /*#__PURE__*/_react.default.createElement("span", {
    className: computedClassNamePlaceholder
  }, renderPlaceholder(placeholder))), /*#__PURE__*/_react.default.createElement("span", {
    className: _open ? _SelectModule.default.arrowOpened : _SelectModule.default.arrow,
    style: {
      transition: "all ".concat(iconTransitionSpeed || seconds, "s")
    }
  }, icon)), /*#__PURE__*/_react.default.createElement("div", {
    ref: selectOpenedRef,
    className: computedClassNameOpened,
    style: _open ? position === "top" ? _objectSpread(_objectSpread({}, styleOpened), {}, {
      borderBottomLeftRadius: 0,
      borderBottomRightRadius: 0,
      maxHeight: maxHeightOpened
    }) : _objectSpread(_objectSpread({}, styleOpened), {}, {
      borderTopLeftRadius: 0,
      borderTopRightRadius: 0,
      maxHeight: maxHeightOpened
    }) : _objectSpread(_objectSpread({}, styleClosed), {}, {
      maxHeight: 0
    })
  }, isObject ? computedItems.filter(item => item.searchable !== false).map((option, i) => /*#__PURE__*/_react.default.createElement("div", {
    key: i,
    className: computedClassNameOption,
    onClick: () => {
      selectRef === null || selectRef === void 0 ? void 0 : selectRef.current.updateValue(option);
    }
  }, renderOption(option[labelKey], option))) : computedItems.map((option, i) => /*#__PURE__*/_react.default.createElement("div", {
    key: i,
    className: computedClassNameOption,
    onClick: () => {
      selectRef === null || selectRef === void 0 ? void 0 : selectRef.current.updateValue(option);
    }
  }, renderOption(option))))));
};
const Select = /*#__PURE__*/(0, _react.forwardRef)(SelectComponent);
var _default = Select;
exports.default = _default;