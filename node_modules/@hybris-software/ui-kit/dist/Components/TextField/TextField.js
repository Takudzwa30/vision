"use strict";

require("core-js/modules/web.dom-collections.iterator.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _classNames = _interopRequireDefault(require("../../Utils/classNames"));
var _generateRandomCharacters = _interopRequireDefault(require("../../Utils/generateRandomCharacters"));
var _TextFieldModule = _interopRequireDefault(require("./TextField.module.css"));
var _ThemeContext = _interopRequireDefault(require("../../Contexts/ThemeContext"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
// Utils

// Styles

// Contexts

/**
 * @param {Object} props - props
 * @param {string} props.autoComplete - autoComplete
 * @param {string} props.className - Class name for the container
 * @param {string} props.baseClassName - Class name for the base
 * @param {string} props.successClassName - Class name for the success
 * @param {string} props.errorMessageClassName - Class name for the error message
 * @param {string} props.errorClassName - Class name for the error
 * @param {string} props.labelClassName - Class name for the label
 * @param {boolean} props.isValid - Is valid
 * @param {string} props.errorDetails - Error details
 * @param {string} props.label - Label
 * @param {boolean} props.onPaste - On paste
 * @param {boolean} props.onCopy - On copy
 * @param {string} props.placeholder - Placeholder
 * @param {function} props.setValue - Set value
 * @param {function} props.setShowErrors - Set show errors
 * @param {Object} props.style - Style
 * @param {string} props.value - Value
 * @param {boolean} props.showError - Show error
 * @param {number} props.maxLength - Max length
 * @param {function} props.onBlur - On blur
 * @param {function} props.onInput - On input
 * @param {function} props.onChange - On change
 * @param {boolean} props.readOnly - Read only
 * @param {string} props.inputId - Input id
 * @param {number} props.rows - Rows
 * @param {number} props.cols - Cols
 */

const TextField = _ref => {
  var _themeContext$theme, _themeContext$theme2, _themeContext$theme2$, _themeContext$theme3, _themeContext$theme4, _themeContext$theme4$, _themeContext$theme5, _themeContext$theme6, _themeContext$theme6$, _themeContext$theme7, _themeContext$theme8, _themeContext$theme8$, _themeContext$theme9, _themeContext$theme10, _themeContext$theme11;
  let {
    autoComplete = "new-password",
    className,
    baseClassName,
    successClassName,
    errorMessageClassName,
    errorClassName,
    labelClassName,
    isValid,
    errorDetails,
    label,
    onPaste: _onPaste = true,
    onCopy: _onCopy = true,
    placeholder,
    setValue = () => {},
    setShowErrors = () => {},
    style,
    value,
    showError = true,
    maxLength,
    onBlur: _onBlur = () => {},
    onInput: _onInput = () => {},
    onChange = () => {},
    readOnly = false,
    inputId,
    rows = 4,
    cols = 50
  } = _ref;
  // Variables
  const computedInputId = inputId || (0, _generateRandomCharacters.default)();
  const themeContext = (0, _react.useContext)(_ThemeContext.default);
  const errorMessageString = errorDetails == null ? null : typeof errorDetails === "object" ? errorDetails.message : errorDetails;
  const computedBaseClassName = baseClassName || (themeContext === null || themeContext === void 0 ? void 0 : themeContext.theme) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme = themeContext.theme) === null || _themeContext$theme === void 0 ? void 0 : _themeContext$theme.inputField) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme2 = themeContext.theme) === null || _themeContext$theme2 === void 0 ? void 0 : (_themeContext$theme2$ = _themeContext$theme2.inputField) === null || _themeContext$theme2$ === void 0 ? void 0 : _themeContext$theme2$.baseClassName) || _TextFieldModule.default.inputFieldBase;
  const computedErrorClassName = errorClassName || (themeContext === null || themeContext === void 0 ? void 0 : themeContext.theme) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme3 = themeContext.theme) === null || _themeContext$theme3 === void 0 ? void 0 : _themeContext$theme3.inputField) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme4 = themeContext.theme) === null || _themeContext$theme4 === void 0 ? void 0 : (_themeContext$theme4$ = _themeContext$theme4.inputField) === null || _themeContext$theme4$ === void 0 ? void 0 : _themeContext$theme4$.errorClassName) || _TextFieldModule.default.inputFieldError;
  const computedSuccessClassName = successClassName || (themeContext === null || themeContext === void 0 ? void 0 : themeContext.theme) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme5 = themeContext.theme) === null || _themeContext$theme5 === void 0 ? void 0 : _themeContext$theme5.inputField) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme6 = themeContext.theme) === null || _themeContext$theme6 === void 0 ? void 0 : (_themeContext$theme6$ = _themeContext$theme6.inputField) === null || _themeContext$theme6$ === void 0 ? void 0 : _themeContext$theme6$.successClassName) || _TextFieldModule.default.inputFieldSuccess;
  const computedLabelClassName = labelClassName || (themeContext === null || themeContext === void 0 ? void 0 : themeContext.theme) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme7 = themeContext.theme) === null || _themeContext$theme7 === void 0 ? void 0 : _themeContext$theme7.inputField) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme8 = themeContext.theme) === null || _themeContext$theme8 === void 0 ? void 0 : (_themeContext$theme8$ = _themeContext$theme8.inputField) === null || _themeContext$theme8$ === void 0 ? void 0 : _themeContext$theme8$.labelClassName) || _TextFieldModule.default.label;
  const computedErrorMessageClassName = errorMessageClassName || (themeContext === null || themeContext === void 0 ? void 0 : themeContext.theme) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme9 = themeContext.theme) === null || _themeContext$theme9 === void 0 ? void 0 : _themeContext$theme9.inputField) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme10 = themeContext.theme) === null || _themeContext$theme10 === void 0 ? void 0 : (_themeContext$theme11 = _themeContext$theme10.inputField) === null || _themeContext$theme11 === void 0 ? void 0 : _themeContext$theme11.errorMessageClassName) || _TextFieldModule.default.errorMessageClassName;
  return /*#__PURE__*/_react.default.createElement("div", {
    className: _TextFieldModule.default.componentContainer
  }, label && /*#__PURE__*/_react.default.createElement("label", {
    htmlFor: computedInputId,
    className: computedLabelClassName
  }, label), /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classNames.default)(_TextFieldModule.default.inputField, isValid === true ? computedSuccessClassName : isValid === false ? computedErrorClassName : computedBaseClassName, className),
    style: style
  }, /*#__PURE__*/_react.default.createElement("textarea", {
    rows: rows,
    cols: cols,
    className: (0, _classNames.default)(_TextFieldModule.default.input),
    autoComplete: autoComplete,
    id: computedInputId,
    placeholder: placeholder,
    value: value,
    maxLength: maxLength,
    readOnly: readOnly
    // onInput Function
    ,
    onInput: e => {
      setValue(e.target.value);
      _onInput(e);
    },
    onChange: onChange
    // onBlur Function
    ,
    onBlur: e => {
      setShowErrors();
      _onBlur(e);
    }
    // onPaste Function
    ,
    onPaste: e => {
      if (!_onPaste) {
        e.preventDefault();
      }
    }
    // onCopy Function
    ,
    onCopy: e => {
      if (!_onCopy) {
        e.preventDefault();
      }
    }
  })), showError && /*#__PURE__*/_react.default.createElement("div", {
    title: errorMessageString,
    className: computedErrorMessageClassName
  }, errorMessageString && errorMessageString));
};
var _default = TextField;
exports.default = _default;