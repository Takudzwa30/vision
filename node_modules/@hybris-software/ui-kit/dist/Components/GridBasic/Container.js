"use strict";

require("core-js/modules/web.dom-collections.iterator.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _classNames = _interopRequireDefault(require("../../Utils/classNames"));
var _GridBasicModule = _interopRequireDefault(require("./GridBasic.module.css"));
var _ThemeContext = _interopRequireDefault(require("../../Contexts/ThemeContext"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
// Utils

// Styles

// Contexts

/**
 * @param {Object} props - props
 * @param {string} props.className - Class name for the container
 * @param {JSX.Element} props.children - Children
 */

const Container = _ref => {
  var _themeContext$theme, _themeContext$theme2, _themeContext$theme2$;
  let {
    className,
    style,
    children
  } = _ref;
  const themeContext = (0, _react.useContext)(_ThemeContext.default);
  const computedClassName = (themeContext === null || themeContext === void 0 ? void 0 : themeContext.theme) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme = themeContext.theme) === null || _themeContext$theme === void 0 ? void 0 : _themeContext$theme.container) && (themeContext === null || themeContext === void 0 ? void 0 : (_themeContext$theme2 = themeContext.theme) === null || _themeContext$theme2 === void 0 ? void 0 : (_themeContext$theme2$ = _themeContext$theme2.container) === null || _themeContext$theme2$ === void 0 ? void 0 : _themeContext$theme2$.containerClassName) || "";
  return /*#__PURE__*/_react.default.createElement("div", {
    style: style,
    className: (0, _classNames.default)(_GridBasicModule.default.container, computedClassName, className)
  }, children);
};
var _default = Container; // Language: javascript
// # className, add one or more class names to the element
// # style, add inline styles to the element
// # children: Rendered children
// # width: Change the width of the container
exports.default = _default;