"use strict";

require("core-js/modules/es.symbol.description.js");
require("core-js/modules/es.weak-map.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("core-js/modules/web.dom-collections.iterator.js");
require("core-js/modules/es.regexp.exec.js");
require("core-js/modules/es.regexp.test.js");
var _uiKit = require("@hybris-software/ui-kit");
var _react = _interopRequireWildcard(require("react"));
var _Table = _interopRequireDefault(require("../Table/Table"));
var _TableClient = _interopRequireDefault(require("../TableClient/TableClient"));
var _TestViewModule = _interopRequireDefault(require("./TestView.module.css"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } // Styles
const TestView = () => {
  const [extraFilters, setExtraFilters] = (0, _react.useState)({});
  const [currentFilter, setCurrentFilter] = (0, _react.useState)({});
  const columns = [{
    Header: "Export ID",
    field: "id",
    orderField: "id",
    copyable: true,
    sortable: true,
    accessor: row => {
      return row.id;
    }
  }, {
    Header: "User ID",
    field: "user",
    orderField: "user",
    copyable: true,
    sortable: true,
    accessor: row => {
      return row.id;
    }
  }, {
    Header: "Username",
    field: "username",
    orderField: "username",
    sortable: true,
    accessor: row => {
      return row.username;
    }
  }, {
    Header: "Status",
    field: "status",
    orderField: "status",
    sortable: true,
    defaultHidden: true,
    accessor: row => {
      return row.status;
    }
  }, {
    Header: "File",
    field: "file",
    orderField: "file",
    sortable: true,
    accessor: row => {
      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, row.file && /*#__PURE__*/_react.default.createElement("a", {
        href: row.file,
        target: "blank",
        download: "export-file"
      }));
    }
  }, {
    Header: "Date Added",
    field: "createdAt",
    orderField: "created_at",
    searchable: false,
    accessor: row => {
      // return <DateFormatter date={row.createdAt} />;
    }
  }];
  const clientTableColumns = [{
    Header: "#",
    field: "id",
    copyable: true,
    accessor: row => {
      return row.id;
    }
  }, {
    Header: "User",
    field: "user",
    sortable: false,
    accessor: row => {
      return row.user;
    }
  }, {
    Header: "Date",
    field: "createdAt",
    searchable: false,
    copyable: true,
    accessor: row => {
      return row.createdAt;
    }
  }, {
    Header: "Subject",
    field: "subject",
    orderField: "subject",
    accessor: row => {
      return row.subject;
    }
  }, {
    Header: "Title",
    field: "title",
    searchable: false,
    accessor: row => {
      return row.title;
    }
  }, {
    Header: "Status fweuyg uiegfiu gwifug wei",
    field: "status",
    searchable: false,
    copyable: true,
    accessor: row => {
      return row.status;
    }
  }, {
    Header: "Priority",
    field: "priority",
    searchable: false,
    accessor: row => {
      return row.priority;
    }
  }];
  const allowedActions = [{
    label: "Edit",
    value: "edit",
    action: () => {}
  }, {
    label: "Add",
    value: "add",
    action: () => {}
  }, {
    label: "Delete",
    value: "delete",
    action: () => {
      console.log("Delete");
    }
  }];

  // const endPoint = "administration/users/";
  const endPoint = "exports/";
  const ref = (0, _react.useRef)(null);
  const refForClientTable = (0, _react.useRef)(null);

  //For Client Table
  const rawData = [{
    id: 2,
    user: "testuser3",
    lastViewer: null,
    owner: null,
    category: "swap problems",
    createdAt: "2023-02-11T06:37:13.289279Z",
    updatedAt: "2023-02-11T08:21:15.320096Z",
    title: "qweqwewqeqw",
    subject: null,
    description: "Unlike traditional markets where fundamentals underpin asset prices trends, is mostly sentiment driven. Hence, it is through historical data that one can extract signals with predictive power. It is also only through a diversified portfolio one can limit and control downside risks, particulary when investing in such a volatile asset class",
    priority: "MEDIUM",
    status: "OPEN"
  }, {
    id: 3,
    user: "testuser3",
    lastViewer: null,
    owner: null,
    category: "swap problems",
    createdAt: "2023-02-11T06:37:23.197351Z",
    updatedAt: "2023-02-13T11:19:18.262551Z",
    title: "qwewqewqe231e4",
    subject: "23e423",
    description: "Unlike traditional markets where fundamentals underpin asset prices trends, is mostly sentiment driven. Hence, it is through historical data that one can extract signals with predictive power. It is also only through a diversified portfolio one can limit and control downside risks, particulary when investing in such a volatile asset class",
    priority: "HIGH",
    status: "IN_PROGRESS"
  }, {
    id: 1,
    user: "testuser3",
    lastViewer: null,
    owner: null,
    category: "swap problems",
    createdAt: "2023-02-11T06:36:52.512553Z",
    updatedAt: "2023-02-20T13:46:20.746841Z",
    title: "qweqwe",
    subject: "qewqweqwe",
    description: "Unlike traditional markets where fundamentals underpin asset prices trends, is mostly sentiment driven. Hence, it is through historical data that one can extract signals with predictive power. It is also only through a diversified portfolio one can limit and control downside risks, particulary when investing in such a volatile asset class",
    priority: "LOW",
    status: "CLOSED"
  }, {
    id: 4,
    user: "alelang",
    lastViewer: "dedwedew4324",
    owner: "conreferral",
    category: "swap problems",
    createdAt: "2023-02-11T06:43:06.130834Z",
    updatedAt: "2023-02-17T10:54:27.604968Z",
    title: "dsrwe",
    subject: "How to deposit money to my portal?",
    description: "Lorem ipsum dolor sit amet, consectetur adipiscing elit.Lorem ipsum dolor sit amet, consectetur adipiscing elit.Lorem ipsum dolor sit amet, consectetur adipiscing elit.Lorem ipsum dolor sit amet, consectetur adipiscing elit.Lorem ipsum dolor sit amet, consectetur adipiscing elit.Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit.Lorem ipsum dolor sit amet, consectetur adipiscing elit.Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit.Lorem ipsum dolor sit amet, consectetur adipiscing elit.Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
    priority: "LOW",
    status: "CLOSED"
  }, {
    id: 5,
    user: "takudzwa",
    lastViewer: null,
    owner: null,
    category: "swap problems",
    createdAt: "2023-02-11T09:10:44.140876Z",
    updatedAt: "2023-02-27T07:14:16.657595Z",
    title: "sadasd",
    subject: "asdas",
    description: "profilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePictureprofilePicture",
    priority: "HIGH",
    status: "OPEN"
  }];
  function checkBoxDisabled(row) {
    if (row.termsAccepted) {
      return true;
    }
    return false;
  }
  function checkBoxDisabledInClientTable(row) {
    if (row.status === "OPEN") {
      return true;
    }
    return false;
  }
  function _onTableRefresh(tableContext) {
    tableContext.tableSettings.selectedData = [];
  }
  return /*#__PURE__*/_react.default.createElement("div", {
    style: {
      padding: 20
    }
  }, /*#__PURE__*/_react.default.createElement(_uiKit.Button, {
    onClick: () => {
      console.log(ref.current.scrollLeft);
      // let tempExtraFilter = {};
      // Object.entries(currentFilter).forEach((entry) => {
      //   const [key, item] = entry;
      //   if (item) tempExtraFilter[key] = item.value;
      // });
      // setExtraFilters(tempExtraFilter)
    }
  }, "test button"), /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("h4", {
    className: _TestViewModule.default.selectLabel
  }, "Terms Accepted"), /*#__PURE__*/_react.default.createElement(_uiKit.Select, {
    placeholder: "Terms Accepted",
    value: currentFilter.terms_accepted,
    items: [{
      label: "All",
      value: ""
    }, {
      label: "Yes",
      value: true
    }, {
      label: "No",
      value: false
    }],
    setValue: value => {
      setCurrentFilter(_objectSpread(_objectSpread({}, currentFilter), {}, {
        terms_accepted: value
      }));
    }
  })), /*#__PURE__*/_react.default.createElement(_Table.default, {
    rowHeight: "70",
    pageSizes: [1, 2, 3, 5, 10],
    allowedActions: allowedActions,
    enableAllowedActions: true,
    searchFieldSelectClassName: _TestViewModule.default.test,
    searchFieldSelectClassNameOpened: _TestViewModule.default.testOpened,
    searchFieldSelectClassNameOptions: _TestViewModule.default.testOptions,
    pageSizeSelectClassName: _TestViewModule.default.testPage,
    pageSizeSelectClassNameOpened: _TestViewModule.default.testOpenedPage,
    ref: ref,
    columns: [...columns],
    endPoint: endPoint,
    onPageSizeChange: e => console.log(e),
    onTableRefresh: e => _onTableRefresh(e),
    enableStripedTable: true,
    conditionToHideSelectRow: checkBoxDisabled,
    enableRefreshBtn: true
  }), /*#__PURE__*/_react.default.createElement(_TableClient.default, {
    rowHeight: "70",
    defaultPageSize: 10,
    pageSizes: [1, 2, 3, 5, 10, 100],
    allowedActions: allowedActions,
    enableAllowedActions: true,
    searchFieldSelectClassName: _TestViewModule.default.test,
    searchFieldSelectClassNameOpened: _TestViewModule.default.testOpened,
    searchFieldSelectClassNameOptions: _TestViewModule.default.testOptions,
    pageSizeSelectClassName: _TestViewModule.default.testPage,
    pageSizeSelectClassNameOpened: _TestViewModule.default.testOpenedPage,
    ref: refForClientTable,
    columns: [...clientTableColumns],
    rawData: [...rawData],
    onPageSizeChange: e => console.log(e),
    enableStripedTable: true,
    conditionToHideSelectRow: checkBoxDisabledInClientTable
  }));
};
var _default = TestView;
exports.default = _default;