"use strict";

require("core-js/modules/es.weak-map.js");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("core-js/modules/web.dom-collections.iterator.js");
var _react = _interopRequireWildcard(require("react"));
var _ConditionalComponent = _interopRequireDefault(require("../ConditionalComponent/ConditionalComponent"));
var _uiKit = require("@hybris-software/ui-kit");
var _PaginationBarModule = _interopRequireDefault(require("./PaginationBar.module.css"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
//Components

//Libraries

// Styles

function PaginationBar(_ref) {
  var _tableSettings$pagina;
  let {
    tableRef,
    data,
    tableSettings,
    texts,
    enablePageSizeSelect,
    pageSizes,
    paginationClassName = _PaginationBarModule.default.paginationClass,
    toPageInputBaseClassName = _PaginationBarModule.default.toPageInputBaseClass,
    toPageInputClassName = _PaginationBarModule.default.toPageInputClass,
    paginationButtonClassName = _PaginationBarModule.default.paginationButtonClass
  } = _ref;
  const [pageTo, setPageTo] = (0, _react.useState)(tableSettings.pagination.page);
  const totalPages = (data === null || data === void 0 ? void 0 : data.length) / tableSettings.pagination.pageSize;
  (0, _react.useEffect)(() => {
    if (pageTo) {
      tableRef.current.toPage(pageTo);
    }
  }, [pageTo]);
  (0, _react.useEffect)(() => {
    setPageTo(tableSettings.pagination.page);
  }, [tableSettings.pagination.page, tableSettings.pagination.pageSize]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: paginationClassName
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _PaginationBarModule.default.leftPagination
  }, /*#__PURE__*/_react.default.createElement(_ConditionalComponent.default, {
    condition: enablePageSizeSelect
  }, /*#__PURE__*/_react.default.createElement(_uiKit.Select, {
    items: pageSizes,
    placeholder: texts.columnsSelect,
    labelKey: "Header",
    value: tableSettings === null || tableSettings === void 0 ? void 0 : (_tableSettings$pagina = tableSettings.pagination) === null || _tableSettings$pagina === void 0 ? void 0 : _tableSettings$pagina.pageSize,
    setValue: value => {
      tableRef.current.setPageSize(value);
    }
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: _PaginationBarModule.default.recordPaginationInfo
  }, /*#__PURE__*/_react.default.createElement("span", null, texts.pageLabel), /*#__PURE__*/_react.default.createElement(_uiKit.InputField, {
    baseClassName: toPageInputBaseClassName,
    showError: false,
    className: toPageInputClassName,
    value: pageTo,
    onChange: e => {
      setPageTo(e.target.value);
    }
  }), /*#__PURE__*/_react.default.createElement("span", null, texts.ofPageLabel, " ", Math.ceil(totalPages)), /*#__PURE__*/_react.default.createElement("span", null, "| ", /*#__PURE__*/_react.default.createElement("strong", null, data === null || data === void 0 ? void 0 : data.length), " records"))), /*#__PURE__*/_react.default.createElement("div", {
    className: _PaginationBarModule.default.inputChangePage
  }, /*#__PURE__*/_react.default.createElement(_uiKit.Button, {
    disabled: tableSettings.pagination.page === 1,
    className: paginationButtonClassName,
    onClick: () => {
      var _tableRef$current;
      return tableRef === null || tableRef === void 0 ? void 0 : (_tableRef$current = tableRef.current) === null || _tableRef$current === void 0 ? void 0 : _tableRef$current.previousPage();
    }
  }, texts.buttonPrevious), /*#__PURE__*/_react.default.createElement(_uiKit.Button, {
    disabled: tableSettings.pagination.page === Math.ceil(totalPages),
    className: paginationButtonClassName,
    onClick: () => {
      var _tableRef$current2;
      return tableRef === null || tableRef === void 0 ? void 0 : (_tableRef$current2 = tableRef.current) === null || _tableRef$current2 === void 0 ? void 0 : _tableRef$current2.nextPage();
    }
  }, texts.buttonNext)));
}
var _default = PaginationBar;
exports.default = _default;